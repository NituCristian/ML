# -*- coding: utf-8 -*-
"""Ethnicity_3_classes_modified.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FGcu2JQHzSv1gnHjbo4K1C_YdMEw5wTP
"""

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import torch

credit=pd.read_csv("/content/Credit.csv")

credit.loc[credit["Ethnicity"]=="Asian", "Income"] = credit.Income - 0.1 * credit.Income
credit.loc[credit["Ethnicity"]=="African American", "Income"] = credit.Income - 0.25 * credit.Income

credit.loc[credit["Ethnicity"]=="Asian", "Rating"] = credit.Rating - 0.1 * credit.Rating
credit.loc[credit["Ethnicity"]=="African American", "Rating"] = credit.Rating - 0.25 * credit.Rating

credit.to_csv("/content/modified.csv", index=False)

credit.head()

credit.Income.values

for n,v in credit.items():
    if v.dtype == "object":
        credit[n] = v.factorize()[0]

Cols = ['Income',	'Limit',	'Rating',	'Cards',	'Age',	'Education',	'Gender',	'Student',	'Married', 'Balance']

X_cols = credit[Cols] # Features
Y_cols = credit.Ethnicity

# Import train_test_split function
from sklearn.model_selection import train_test_split

# Split dataset into training set and test set
X_train, X_test, y_train, y_test = train_test_split(X_cols, Y_cols, test_size=0.25) # 75% training and 25% test

from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, recall_score, classification_report
from sklearn.model_selection import train_test_split

random_forest = RandomForestClassifier(n_estimators=750).fit(X_train, y_train)
y_pred = random_forest.predict(X_test)
print('Accuracy score: ' + str(accuracy_score(y_test, y_pred)))
print('Recall score: ' + str(recall_score(y_test, y_pred, average = 'micro')))
from sklearn.metrics import f1_score

f1 = f1_score(y_test, y_pred, average = 'micro')

print('F1 score: %f' % f1)
print(classification_report(y_test, y_pred))

